/* Rexx */
trace off

/* Fill InpRec1. */
Call ReadInput
Call Say_Nextpage

N = 1
Endpoint = InpRec1.0

Do While (N <= Endpoint)
  Call ReadnextEntry
  /* read entire entry, skip comment lines */
  Select
    When entrytype = 'NONVSAM' Then
      Do
        Call Read_NONVSAM
        Call Write_NONVSAM
      End /* When */
    When entrytype = 'CLUSTER' Then
      Do
        Call Read_VSAM
        Call Write_VSAM
      End /* When */
    When entrytype = 'USERCATALOG' Then
      Do
        Call Read_UCATandALIASES
        Call Write_UCATandALIASES
      End /* When */
    When entrytype = 'ALIAS' Then
      Do
        Call Read_ALIAS
        Call Write_ALIAS
      End /* When */
    When entrytype = 'AIX' Then
      Do
        Call Read_AIX
        Call Write_AIX
      End /* When */
    When entrytype = 'GDGBASE' Then
      Do
        Call ReadWrite_GDG
  /*    Call Write_GDG */
      End /* When */
    When entrytype = 'PAGESPACE' Then
      Do
        Call Read_PAGESPACE
        Call Write_PAGESPACE
      End /* When */
    Otherwise Do
        NOP
      End /* otherwise */
  End /* Select */
End /* while */

Call Say_Nextpage


Exit


/*******************************************************************/
/* Routines ********************************************************/
/*******************************************************************/

/*******************************************************************/
ReadInput:

Address Tso

'EXECIO * DISKR INPUT1 (Stem InpRec1. Finis'
If RC <> 0
Then Do
    Say 'Error reading input file, Rc = ' RC
    Exit 69
  End

Return /* ReadInput */

/*******************************************************************/
Say_Nextpage:

/* Won't work with say */

Return /* Say_Nextpage */

/*******************************************************************/
ReadnextEntry:

ready_entry = 0
/* search next entry */
Do While ((N <= InpRec1.0) & (ready_entry = 0))
  word1 = Word(Inprec1.N,1)
  Select
    When word1 = '0NONVSAM' Then
      Do
        ready_entry = 1
        entrytype = 'NONVSAM'
      End /* When */
    When word1 = '0CLUSTER' Then
      Do
        ready_entry = 1
        entrytype = 'CLUSTER'
      End /* When */
    When word1 = '0USERCATALOG' Then
      Do
        ready_entry = 1
        entrytype = 'USERCATALOG'
      End /* When */
    When word1 = '0ALIAS' Then
      Do
        ready_entry = 1
        entrytype = 'ALIAS'
      End /* When */
    When word1 = '0PAGESPACE' Then
      Do
        ready_entry = 1
        entrytype = 'PAGESPACE'
      End /* When */
    When word1 = '0AIX' Then
      Do
        ready_entry = 1
        entrytype = 'AIX'
      End /* When */
    When word1 = '0GDG' Then
      Do
        ready_entry = 1
        entrytype = 'GDGBASE'
      End /* When */
    Otherwise Do
        entrytype = 0
        N = N + 1
      End /* otherwise */
  End /* Select */
End /* while */
ready_entry = 0
Drop entry.
entrylines = 0
Do While ((N <= InpRec1.0) & (ready_entry = 0))
  entrylines = entrylines + 1
  entry.entrylines = InpRec1.N
  N = N + 1
  If (Substr(InpRec1.N,1,1) = '0') & (Word(InpRec1.N,1) <> '0')
  Then Do
      ready_entry = 1
    End /* Then */
  Else Do
      NOP
    End /* Else */
End /* While */

If (N > InpRec1.0)
Then Do
    endoffile = 1
  End
Else Do
    NOP
  End

Return /* from ReadnextEntry */
/*******************************************************************/
Read_NONVSAM:

ready_nonvsam = 0
volserread = 0
devtyperead = 0
myline = Substr(entry.1,2,(Length(entry.1)-1))
entname = Word(myline,3)
NN = 1
Do While ((NN <= entrylines) & (ready_nonvsam = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub16word1 = Substr(word1,1,6)
  If (Sub16word1 = 'VOLSER')
  Then Do
      volser = Substr(word1,Length(word1)-5,6)
      volserread = 1
      word2  = Word(myline,2)
      devtyperead = Substr(word2,Length(word2)-8,8)
      devtype = Translate_devtype(devtyperead)
      devtyperead = 1
    End /* Then */
  Else Do
      NOP
    End /* Else */
  ready_nonvsam = ((volserread = 1) & (devtyperead = 1))
  NN = NN + 1
End /* while */

Return /* from Read_NONVSAM */
/*******************************************************************/
Read_PAGESPACE:

ready_pagesp = 0
volserread = 0
myline = Substr(entry.1,2,(Length(entry.1)-1))
entname = Word(myline,3)
NN = 1
Do While ((NN <= entrylines) & (ready_pagesp = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub16word1 = Substr(word1,1,6)
  If (Sub16word1 = 'VOLSER')
  Then Do
      volser = Substr(word1,Length(word1)-5,6)
      volserread = 1
    End /* Then */
  Else Do
      NOP
    End /* Else */
  ready_pagesp = (volserread = 1)
  NN = NN + 1
End /* while */

Return /* from Read_PAGESPACE */
/*******************************************************************/
Read_VSAM:

ready_vsam = 0
volserread = 0
orgread = 0
myline = Substr(entry.1,2,(Length(entry.1)-1))
entname = Word(myline,3)
NN = 1
Do While ((NN <= entrylines) & (ready_vsam = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub16word1 = Substr(word1,1,6)
  If (Sub16word1 = 'VOLSER')
  Then Do
      volser = Substr(word1,Length(word1)-5,6)
      volserread = 1
    End /* Then */
  Else Do
      If (word1 = 'UNORDERED') |,
         (word1 = 'ORDERED') |,
         (word1 = 'LINEAIR') |,
         (word1 = 'NUMBERED')
      Then Do
          organisation = word1
          orgread = 1
        End
      NOP
    End /* Else */
  ready_vsam = ((volserread = 1) & (orgread = 1))
  NN = NN + 1
End /* while */

Return /* from Read_VSAM */
/*******************************************************************/
Read_UCATandALIASES:

ready_ucat = 0
volserread = 0
devtread = 0
aliasesread = 0
myline = Substr(entry.1,2,(Length(InpRec1.N)-1))
entname = Word(myline,3)
NN = 1
Drop aliases.
aliases.0 = 0

Do While ((NN <= entrylines) & (ready_ucat = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub16word1 = Substr(word1,1,6)
  If (Sub16word1 = 'VOLSER')
  Then Do
      volser = Substr(word1,Length(word1)-5,6)
      volserread = 1
      word2  = Word(myline,2)
      devtyperead = Substr(word2,Length(word2)-8,8)
      devtype = Translate_devtype(devtyperead)
      devtyperead = 1
    End /* Then */
  Else Do
      If (Substr(word1,1,Length('ASSOCIATIONS')) = 'ASSOCIATIONS')
      Then Do
          NN = NN + 1
          Do loopcnt = NN To entrylines
            myline = Substr(entry.loopcnt,2,(Length(entry.loopcnt)-1))
            word1 = Word(myline,1)
            If Substr(word1,1,5) = 'ALIAS'
            Then Do
                help = (aliases.0 + 1)
                aliases.help = Substr(word1,10,Length(word1)-10+1)
                aliases.0 = help
              End /* Then */
            Else Do
                NOP
              End /* Else */
          End /* Do */
          aliasesread = 1
        End /* Then */
      NOP
    End /* Else */
  ready_ucat = ((volserread = 1) & (devtread = 1)) & (aliasesread = 1)
  NN = NN + 1
End /* while */

Return /* from Read_UCATandALIASES */
/*******************************************************************/
Read_ALIAS:

ready_alias = 0
ucatread = 0
myline = Substr(entry.1,2,(Length(entry.1)-1))
entname = Word(myline,3)
NN = 1
Do While ((NN <= entrylines) & (ready_alias = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub17word1 = Substr(word1,1,7)
  If (Sub17word1 = 'USERCAT')
  Then Do
      ucat = Substr(word1,10,Length(word1)-9)  /* 10 = Len USERCAT--*/
      ucatread = 1
    End /* Then */
  Else Do
      NOP
    End /* Else */
  ready_alias = (ucatread = 1)
  NN = NN + 1
End /* while */

Return /* from Read_ALIAS */
/*******************************************************************/
Read_AIX:
/* watch path ... later ??? .... */
ready_aix = 0
volserread = 0
myline = Substr(entry.1,2,(Length(entry.1)-1))
entname = Word(myline,3)
NN = 1
Do While ((NN <= entrylines) & (ready_aix = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub16word1 = Substr(word1,1,6)
  If (Sub16word1 = 'VOLSER')
  Then Do
      volser = Substr(word1,Length(word1)-5,6)
      volserread = 1
    End /* Then */
  Else Do
      NOP
    End /* Else */
  ready_aix = (volserread = 1)
  NN = NN + 1
End /* while */

Return /* from Read_AIX */
/*******************************************************************/
ReadWrite_GDG:
/* ook associations      */
ready_gdg = 0
limitread = 0
asoread = 0
myline = Substr(entry.1,2,(Length(entry.1)-1))
entname = Word(myline,4)
NN = 1
Do While ((NN <= entrylines) & (ready_gdg = 0))
  myline = Substr(entry.NN,2,(Length(entry.NN)-1))
  word1 = Word(myline,1)
  Sub15word1 = Substr(word1,1,5)
  If (Sub15word1 = 'LIMIT')
  Then Do
      loper = (Length('LIMIT') + 1)
      endofdash = 0
      Do While ((endofdash = 0) & (loper <= Length(word1)) )
        endofdash = (Substr(word1,loper,1) <> '-')
        loper = loper + 1
      End /* While */
      limit = Substr(word1,loper-1,Length(word1)-loper+1+1)
      limitread = 1
      scratch = Word(myline,2)
      empty = Word(myline,3)
      Call Write_GDG
    End /* Then */
  Else Do /* Read the associations */
      If word1 = 'NONVSAM'
      Then Do
          Drop entrycopy.
          entrycopy.0 = 0
          entrycopylines = 0
          Do lopertje = NN To entrylines
            entrycopylines = entrycopylines + 1
            entrycopy.entrycopylines = entry.lopertje
          End
          Drop entry.
          entry.1 = entrycopy.1
          entrylines = 1
          Do lopertje = 2 To entrycopylines
            If Word(entrycopy.lopertje,1) = 'NONVSAM'
            Then Do
                Call Read_NONVSAM
                Call Write_NONVSAM
                Drop entry.
                entry.1 = entrycopy.lopertje
                entrylines = 1
              End /* Then */
            Else Do
                entrylines = entrylines + 1
                entry.entrylines = entrycopy.lopertje
              End
          End /* Do  */
          Call Read_NONVSAM
          Call Write_NONVSAM
          asoread = 1
        End
      Else Do
          NOP
        End
    End /* Else */
  ready_gdg = ((limitread = 1) & (asoread = 1))
  NN = NN + 1
End /* while */

Return /* from Read_AIX */
/*******************************************************************/
Translate_devtype: Procedure
Arg typenum

If typenum = '00000000'
Then Do
    returntype = '00000000'
  End /* Then */
Else Do
    Select
      When typenum = '3010200E'
        Then returntype = '3380'
      When typenum = '3010200F'
        Then returntype = '3390'
      When typenum = '30102004'
        Then returntype = '9345'
      When typenum = '30C08003'
        Then returntype = '3420'
      When typenum = '32008003'
        Then returntype = '3420'
      When typenum = '32108003'
        Then returntype = '3420'
      When typenum = '33008003'
        Then returntype = '3420C'    /* ??? */
      When typenum = '34008003'
        Then returntype = '3430'
      When typenum = '78008080'
        Then returntype = '3490'     /* ??? no idrc */
      When typenum = '78048080'
        Then returntype = '3490'     /* ??? with idrc */
      When typenum = '78048081'
        Then returntype = '3490'     /* ??? enhanced capability */
      Otherwise Do
         Say 'INTRLCAT 0001E: Device type entry ' typenum ' unknown.'
         Exit 999
        End /* Otherwise */
    End /* Select */
  End /* Else */

Return returntype /* from Translate_devtype */

/*******************************************************************/
Write_NONVSAM:

Say 'NONVSAM ' entname '-- ' volser ' -- ' devtype

Return /* from Write_NONVSAM */
/*******************************************************************/
Write_PAGESPACE:

Say 'PAGESPACE ' entname '-- ' volser

Return /* from Write_NONVSAM */
/*******************************************************************/
Write_VSAM:

Say 'CLUSTER ' entname '-- ' volser ' -- ' organisation

Return /* from Write_NONVSAM */
/*******************************************************************/
Write_UCATandALIASES:

Say 'UCAT ' entname '-- ' volser ' -- ' devtype ' -- Aliases: '
If aliases.0 = 0
Then Do
    Say '    ***NONE***'
  End /* Then */
Else Do
    Do loopcount = 1 To aliases.0
      Say '   ALIAS ' aliases.loopcount
    End
  End /* Else */

Return /* from Write_UCATandAlIASES */
/*******************************************************************/
Write_ALIAS:

Say 'ALIAS ' entname '-- ' ucat

Return /* from Write_ALIAS */
/*******************************************************************/
Write_GDG:

Say 'GDG ' entname '-- ' limit ' -- ' empty ' -- ' scratch

Return /* from Write_GDG */
/*******************************************************************/
Write_AIX:

Say 'AIX ' entname '-- ' volser

Return /* from Write_GDG */
